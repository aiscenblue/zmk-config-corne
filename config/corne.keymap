/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT        0
#define CODE           1
#define MODS           2
#define HW_DEF         3
#define DOTA_DEF       4
#define DOTA_SHIFT     5

/ {
        keymap {
                compatible = "zmk,keymap";

                win_layer {
                        bindings = <
                                   &trans   &kp Q        &kp W        &kp E          &kp R              &kp T                     &kp Y              &rpi C_VOLUME_DOWN U   &kp I              &rpi C_VOLUME_UP O      &rpi ESCAPE P           &trans
                                   &trans   &rpi TAB A   &ctrl_S      &alt_D         &shft_F            &rpi LCMD G               &rpi LCMD H        &shft_J                &alt_K             &ctrl_L                 &rpi TAB SEMI           &trans
                                   &trans   &kp Z        &kp X        &kp C          &kp V              &kp B                     &kp BSPC           &kp N                  &kp M              &kp COMMA               &rpi RET DOT            &trans
                                                                      &trans         &trans             &shft_tab                 &mods_dota_tap     &rpi RET SPACE         &mo MODS
                        >;
                };
                code_layer {
                        bindings = <
                                   &trans    &kp N1     &kp N2       &kp N3       &kp N4       &kp N5                      &kp BACKSLASH      &kp SLASH        &kp N9             &kp N0      &kp EQUAL    &trans
                                   &trans    &kp N6     &kp N7       &kp N8       &kp N9       &kp N0                      &trans             &trans           &kp LBKT           &kp RBKT    &kp SQT      &trans
                                   &trans    &kp F1     &kp F2       &kp F3       &kp F4       &kp F5                      &trans             &trans           &trans             &kp GRAVE   &kp MINUS    &trans
                                                                     &trans       &trans       &shft_tab                   &trans             &trans           &trans
                        >;
                };

                mods_layer {
                        bindings = <
                                   &trans   &kp F1     &kp F2    &kp F3           &kp F4           &kp F5                               &trans       &trans                     &arrow_rpi PAGE_UP UP           &trans                     &trans            &trans
                                   &trans   &kp F6     &kp F7    &kp F8           &kp F9           &kp F10                              &trans       &arrow_rpi HOME LEFT       &arrow_rpi PAGE_DOWN DOWN       &arrow_rpi END RIGHT       &trans            &trans 
                                   &trans   &kp F11    &kp F12   &trans           &trans           &trans                               &trans       &trans                     &trans                          &trans                     &trans            &trans
                                                                 &trans           &trans           &shft_tab                            &trans       &trans                     &trans
                        >;
                };

                hardware_layer {
                        bindings = <
                                   &trans       &bt BT_CLR      &trans          &trans              &bt BT_PRV        &bt BT_NXT                &trans     &trans    &trans    &trans   &trans     &trans
                                   &trans       &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2        &bt BT_SEL 3      &bt BT_SEL 4              &trans     &trans    &trans    &trans   &trans     &trans
                                   &trans       &trans          &trans          &trans              &trans            &trans                    &trans     &trans    &trans    &trans   &trans     &trans
                                                                                &trans              &trans            &trans                    &trans     &trans    &trans
                        >;
                };


                dota_default_layer {
                                        bindings = <
                                                   &trans   &kp Q   &kp W   &kp E        &kp R       &kp T                         &trans     &trans    &trans            &trans   &trans     &trans
                                                   &trans   &kp A   &kp S   &kp D        &kp F       &kp G                         &trans     &trans    &trans            &trans   &trans     &trans
                                                   &trans   &kp Z   &kp X   &kp C        &kp V       &kp B                         &trans     &trans    &trans            &trans   &trans     &trans
                                                                            &kp TAB      &kp LALT    &mo DOTA_SHIFT                &trans     &trans    &trans
                                        >;
                                };

                dota_shift_layer {
                         bindings = <
                                   &trans    &kp N1       &kp N2       &kp N3       &kp N4       &dota_5_Y                           &trans     &trans    &trans    &trans   &trans     &trans
                                   &trans    &kp N6       &kp N7       &kp N8       &kp N9       &kp N0                              &trans     &trans    &trans    &trans   &trans     &trans
                                   &trans    &kp F1       &kp F2       &kp F3       &kp F3       &kp F5                              &trans     &trans    &trans    &trans   &trans     &trans
                                                          &trans       &trans       &trans                                           &trans     &trans    &trans
                                        >;
                                };
        };

        behaviors {
                rpi: require_prior_idle {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <200>;
                    quick-tap-ms = <50>;
                    require-prior-idle-ms = <120>;
                    bindings = <&kp>, <&kp>;
                };

                arrow_rpi: arrow_rpi_idle {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <600>;
                    quick-tap-ms = <200>;
                    require-prior-idle-ms = <150>;
                    bindings = <&kp>, <&kp>;
                };

                tab_rpi: tab_rpi_idle {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <200>;
                    quick-tap-ms = <200>;
                    require-prior-idle-ms = <125>;
                    bindings = <&kp>, <&kp>;
                };

                bspc_rpi: bspc_rpi_idle {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "tap-preferred";
                    tapping-term-ms = <800>;
                    quick-tap-ms = <800>;
                    require-prior-idle-ms = <0>;
                    bindings = <&kp>, <&kp>;
                };

                shft_tab: shift_tab {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <500>;
                    bindings = <&kp LSHIFT>, <&kp CAPSLOCK>;
                };

                dota_5_Y: dota_5_Y {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp N5>, <&kp Y>;
                };

                mods_dota_tap: mods_dota_tap {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <400>;
                    bindings = <&mo CODE>, <&tog DOTA_DEF>;
                };

                ctrl_S: ctrl_S {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&rpi LCTRL S>;
                };

                alt_D: alt_D {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&rpi LALT D>;
                };

                shft_F: shft_F {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&rpi LSHIFT F>;
                };

                shft_J: shft_J {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&rpi RSHIFT J>;
                };

                alt_K: alt_K {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&rpi RALT K>;
                };

                ctrl_L: ctrl_L {
                    compatible = "zmk,behavior-tap-dance";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&rpi RCTRL L>;
                };

                
        };

        win_conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                    if-layers = <CODE MODS>;
                    then-layer = <HW_DEF>;
                };
            };
};
